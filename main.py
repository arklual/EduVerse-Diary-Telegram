from os import EX_CANTCREAT
import aiogram
import config
from aiogram import Bot, Dispatcher, executor, types
import logging
from aiogram.dispatcher.filters import Command
from aiogram.utils.markdown import hbold, hcode, hitalic, hunderline, hlink, hstrikethrough
import db_file
from parser import fill_edu_instituts
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import parser
from fsm import SignInToDiary
from aiogram.dispatcher.storage import FSMContext




#log
logging.basicConfig(level=logging.INFO)

# bot init
bot = Bot(token = config.TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)
# –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
db = db_file.DBFile()

@dp.message_handler(Command('start'))
async def on_start(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}. –¢—ã —É–∂–µ –ø—Ä–æ—á–∏—Ç–∞–ª –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∑–Ω–∞–µ—à—å, —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å.\n' 
    + '–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —Ç—ã –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–ª –æ–ø–∏—Å–∞–Ω–∏–µ, —Ç–æ —è —Ç–≤–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫, –Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ –∏ –±–æ–ª–µ–µ @—Ö—É–µ–Ω–Ω—ã–π. \n\n ' +
    "üìç " + hbold(' –ß—Ç–æ —è –º–æ–≥—É?') + '\n'
    + 'üö© –Ø –º–æ–≥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –Ω–æ–≤—ã–µ  –æ—Ü–µ–Ω–∫–∏ –≤ —Ç–æ—Ç –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —Ç—ã –∏—Ö –ø–æ–ª—É—á–∞–µ—à—å.' + '\n' +
    'üö© –¢–∞–∫–∂–µ —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —É –º–µ–Ω—è' + hunderline(' –æ—Ü–µ–Ω–∫–∏ –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏') + ' –ø–æ –ª—é–±–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É.\n'
    +'üö© –ò –µ—â–µ —Ç—ã –º–æ–∂–µ—à—å —Å–º–æ—Ç—Ä–µ—Ç—å ' + hunderline('–∏—Ç–æ–≥–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏') + '\n' + 
    'üö© –¢—ã –º–æ–∂–µ—à—å –≤—Å–ø–æ–º–Ω–∏—Ç—å —Å–≤–æ–π –ø–∞—Ä–æ–ª—å –∏ –ª–æ–≥–∏–Ω –æ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞' +
    'üö© –ò, –ø–æ–∫–∞ —á—Ç–æ, –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—â—å, –∫–æ—Ç–æ—Ä—É—é —è –º–æ–≥—É –¥–µ–ª–∞—Ç—å - —ç—Ç–æ ' + hunderline('–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã.') + 
    '–° –∏—Ö –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–Ω—è—Ç—å —á—Ç–æ —É —Ç–µ–±—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ª—É—á—à–µ,  –∞ —á—Ç–æ —Ö—É–∂–µ.\n\n' + 'üö®' + hbold('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ') + 'üö®\n' + '–¢—ã –º–æ–∂–µ—à—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–æ—Ç–æ–º, –Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏.\n–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞–∂–º–∏ —Å—é–¥–∞ üëâ /subscribe \n\n'
    'üÜò\n–°–ø—Ä–∞–≤–∫–∞: /help', parse_mode='HTML'
    )

@dp.message_handler(Command('subscribe'))
async def subscribe(message: types.Message):
    if (not db.subscriber_exists(message.from_user.id)):
        db.add_subscriber(message.from_user.id)
        await message.answer(hbold('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!!!') + 'ü•≥üòéü§ì\n' + '–¢—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è! –¢–µ–ø–µ—Ä—å —Ç–µ–±–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –æ—Ü–µ–Ω–∫–∞—Ö', parse_mode='HTML')
    else:
        db.update_subscription(message.from_user.id, True)
        await message.answer("–¢—ã —Å–Ω–æ–≤–∞ –ø–æ–¥–ø–∏—Å–∞–Ω. –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!!!")
    


@dp.message_handler(Command('unsubscribe'))
async def unsubscribe(message: types.Message):
    if (not db.subscriber_exists(message.from_user.id)):
        await message.answer('–¢—ã –Ω–µ –º–æ–∂–µ—à—å –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è —Ç–∞–∫ –∫–∞–∫ —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞–ª—Å—è')
    else:
        db.update_subscription(message.from_user.id, False)
        await message.answer('–¢—ã –æ—Ç–ø–∏—Å–∞–ª—Å—è üò¢üò¢üò¢ –Ø –¥—É–º–∞—é —ç—Ç–æ –±—ã–ª–∞ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å, –ø–æ—ç—Ç–æ–º—É –≤–æ—Ç —Å—é–¥–∞ —Ç—ã–∫–∞–π –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –æ–±—Ä–∞—Ç–Ω–æ üëâ /subscribe. –£ –Ω–∞—Å –≤—Å–µ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è, –∞ —Ç—ã —É—Ö–æ–¥–∏—à—å. –ó–∞—á–µ–º –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –≤—Å–µ —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ?üßê')
    
    

@dp.message_handler(Command('help'))
async def help_user(message: types.Message):
    await message.answer("""–í–æ—Ç –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞—à–µ–º—É –±–æ—Ç—É.\n/subscribe - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–æ—Ç–∞ \n/unubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –±–æ—Ç–∞ \n/signin_to_diary - –≤–æ–π—Ç–∏ –≤ —Å–≤–æ–π –¥–Ω–µ–≤–Ω–∏–∫ \n/get_login - –≤—Å–ø–æ–º–Ω–∏—Ç—å –ª–æ–≥–∏–Ω –æ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞\n/get_password - –≤—Å–ø–æ–º–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –æ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞ \n/get_marks - —É–∑–Ω–∞—Ç—å –æ –ª—é–±—ã—Ö –æ—Ü–µ–Ω–∫–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ —É –≤–∞—Å —Å—Ç–æ—è—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç \n/get_emails - –ø–æ–ª—É—á–∞—Ç—å email-—Ä–∞—Å—Å—ã–ª–∫—É –æ –Ω–æ–≤–æ–º \n/dont_get_emails - –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å email-—Ä–∞—Å—Å—ã–ª–∫—É \n/leave_review - –¥–∞—Ç—å —Ñ–∏–¥–±—ç–∫ –∏ –ø–æ–º–æ—á—å –Ω–∞–º –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ \n–ï—Å–ª–∏ —á—Ç–æ, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ '/' –∏ —Ç—ã —É–≤–∏–¥–∏—à—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–∑–≤–∞—Ç—å –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç""")


@dp.message_handler(Command('get_marks'))
async def get_marks(message: types.Message):
    pass

@dp.message_handler(Command('signin_to_diary'))
async def signin_to_diary(message: types.Message):
    if (not db.subscriber_exists(message.from_user.id)):
        await message.answer('–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –±–æ—Ç–∞. –ë–æ—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç—ã –Ω–∞ –Ω–µ–≥–æ –ø–æ–¥–ø–∏—Å–∞–Ω.\n –í—ã–∑–æ–≤–∏ /subscribe –∏ –ø–æ–ª—å–∑—É–π—Å—è –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ')
    elif (not db.is_subscribed(message.from_user.id)):
        await message.answer('–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –±–æ—Ç–∞. –ë–æ—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç—ã –Ω–∞ –Ω–µ–≥–æ –ø–æ–¥–ø–∏—Å–∞–Ω.\n –í—ã–∑–æ–≤–∏ /subscribe –∏ –ø–æ–ª—å–∑—É–π—Å—è –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ')
    elif db.is_subscribed(message.from_user.id):
        await message.answer('–í–≤–µ–¥–∏ ' + hbold('—Ä–∞–π–æ–Ω/–≥–æ—Ä–æ–¥') + ' –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –æ–±—É—á–∞–µ—à—å—Å—è. \n' + hitalic('–í–∞–∂–Ω–æ: –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Ä–∞–π–æ–Ω–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –¥–Ω–µ–≤–Ω–∏–∫–æ–º!!!'), parse_mode='HTML')
        await SignInToDiary.Locality.set()

@dp.message_handler(state=SignInToDiary.Locality)
async def entered_locality_input_school(message: types.Message, state: FSMContext):
    # save answer
    locality = message.text
    """ await state.update_data(answer1 = answer) """
    await state.update_data(locality = locality) 

    await message.answer('–û—Ç–ª–∏—á–Ω–æ,  –¥–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ.  –í –∫–∞–∫–æ–º –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–º —É—á–µ—Ä–µ–∂–¥–µ–Ω–∏–∏ —Ç—ã —É—á–∏—à—å—Å—è?' + '\n' + hitalic("–í–∞–∂–Ω–æ: –ù–∞–∑–≤–∞–Ω–∏–µ  –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ  —É—á–µ—Ä–µ–∂–¥–µ–Ω–∏—è –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –¥–Ω–µ–≤–Ω–∏–∫–æ–º!!!"), parse_mode='HTML')
    await SignInToDiary.School.set()


@dp.message_handler(state=SignInToDiary.School)
async def entered_school_input_login(message: types.Message, state: FSMContext):
    # save answer
    school = message.text
    await state.update_data(school = school) 

    await message.answer('–û—Ç–ª–∏—á–Ω–æ, –¥–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ. –í–≤–µ–¥–∏ –ª–æ–≥–∏–Ω –æ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –≤–æ–π—Ç–∏ –≤ –Ω–µ–≥–æ —á–µ—Ä–µ–∑ –±–æ—Ç–∞.')
    await SignInToDiary.Login.set()


@dp.message_handler(state=SignInToDiary.Login)
async def entered_login_input_password(message: types.Message, state: FSMContext):
    # save answer
    login = message.text
    await state.update_data(login = login) 

    await message.answer('–û—Ç–ª–∏—á–Ω–æ, –¥–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ. –í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å –æ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –≤–æ–π—Ç–∏ –≤ –Ω–µ–≥–æ —á–µ—Ä–µ–∑ –±–æ—Ç–∞.')
    await SignInToDiary.Password.set()


@dp.message_handler(state=SignInToDiary.Password)
async def signup(message: types.Message, state: FSMContext):
    # save answer
    password = message.text
    await state.update_data(password = password) 

    data = await state.get_data()
    locality = data.get('locality')
    school = data.get('school')
    login = data.get('login')
    password = data.get('password')

    if parser.find_edu_instituts(locality) == False:
        #await message.answer('–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–Ω–µ–≤–Ω–∏–∫—É. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑. –ü—Ä–æ—Å–ª–µ–¥–∏ –∑–∞ —Ç–µ–º, —á—Ç–æ–± –≤—Å–µ –¥–∞–Ω–Ω–µ —Å–æ–≤–ø–∞–¥–∞–ª–∏ —Å –¥–Ω–µ–≤–Ω–∏–∫–æ–º. –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞/—Ä–∞–π–æ–Ω–∞ –∏ —à–∫–æ–ª—ã –¥–æ–ª–∂–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤ —Ç–≤–æ–µ–º –¥–Ω–µ–≤–Ω–∏–∫–µ.')
        await message.answer('–í –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–æ–±–æ–π –≥–æ—Ä–æ–¥–µ/—Ä–∞–π–æ–Ω–µ –Ω–µ—Ç —à–∫–æ–ª. –ü–æ–ø—Ä–æ–±—É–π –∑–∞–Ω–æ–≤–æ. \n\n/signin_to_diary')
    
    try:
        parser.sign_in(message.from_user.id, school, locality, login, password)
        await message.answer('–í—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ. –¢–µ–ø–µ—Ä—å –º—ã –º–æ–∂–µ–º —É–≤–µ–¥–æ–º–ª—è—Ç—å —Ç–µ–±—è –æ–±–æ –≤—Å–µ—Ö —Ç–≤–æ–∏—Ö –æ—Ü–µ–Ω–∫–∞—Ö.')
        await state.reset_state()
    except Exception:
        await message.answer('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ')
        await state.reset_state()



@dp.message_handler(Command('leave_review'))
async def leave_review(message: types.Message):
    # –ù–∞–ø–∏—Å–∞—Ç—å —Å—Ç–∞—Ç—å—é, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–Ω—è–ª, —á—Ç–æ –µ–º—É –æ—Å—Ç–∞–≤–∏—Ç—å –≤ –æ—Ç–∑—ã–≤–µ.
    await message.answer(hbold('–í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤?') + '\n' +
    """–Ø –æ—á–µ–Ω—å —Ä–∞–¥, –≤–µ–¥—å —Ñ–∏–¥–±—ç–∫ –æ—á–µ–Ω—å –≤–∞–∂–µ–Ω –¥–ª—è –Ω–∞—Å, –æ—Å–æ–±–µ–Ω–Ω–æ —Å–µ–π—á–∞—Å, –≤ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏, –∫–æ–≥–¥–∞ –º—ã —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–∏. –ù–æ –ø–µ—Ä–µ–¥ —ç—Ç–∏–º . . . \n""" +
    """–ü—Ä–æ—á—Ç–∏—Ç–µ —ç—Ç–æ: """ + hlink('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ñ–∏–¥–±—ç–∫–∞', 'https://gdz.ru/class-9/algebra/makarichev-14/569-nom/') + '\n' +
    hbold(""""'–î–ª—è —á–µ–≥–æ?' - —Å–ø—Ä–æ—Å–∏—à—å —Ç—ã?""")  + '\n' + """–ù–∞–º –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –æ—Ç–∑—ã–≤ –±—ã–ª '–ø–æ–ª–Ω—ã–π'. –û—Ç–∑—ã–≤—ã —Ç–∏–ø–∞ '—Ö–æ—Ä–æ—à–æ' –∏–ª–∏ '–º–Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å' –Ω–∞–º –Ω—É–∂–Ω—ã, –Ω–æ –∫–∞–∫ –æ–Ω–∏ –ø–æ–º–æ–≥—É—Ç –Ω–∞–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–Ω–∏–º–∞—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç? \n""" +
    hbold('–ì–¥–µ —è –º–æ–≥—É –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤?') + '\n' + """–í–æ—Ç –∑–¥–µ—Å—å üëâ <a href='eduverse8@gmail.com'>eduverse8@gmail.com</a>. –¢–∞–∫–∂–µ –Ω–∞—à email –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ñ–∏–¥–±—ç–∫—É""" + '\n\n' + hbold('–°–ø–∞—Å–∏–±–æ üòäüòáüôè'), parse_mode='HTML'

    )

@dp.message_handler(Command('get_emails'))
async def get_emails(message: types.Message):
    if (not db.subscriber_exists(message.from_user.id)):
        await message.answer('–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å email-—Ä–∞—Å—Å—ã–ª–∫—É, —Ç—ã –¥–æ–ª–∂–µ–Ω –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–æ—Ç–∞. \n –í—ã–∑–æ–≤–∏ –∫–æ–º–∞–Ω–¥—É /subcribe')
    else:
        db.update_subscription(message.from_user.id, True, True)
        await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!!!' + 'ü•≥üòéü§ì\n' + '–¢—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è! –¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –æ—Å–≤–µ–¥–æ–º–ª–µ–Ω –æ –Ω–∞—à–∏—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö –ø–æ—Ç–æ–º—É —á—Ç–æ –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å email-—ã')

@dp.message_handler(Command('dont_get_emails'))
async def dont_get_emails(message: types.Message):
    if (not db.subscriber_exists(message.from_user.id)):
        await message.answer('–¢—ã –∏ —Ç–∞–∫ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É, –∞ –µ—â–µ —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –±–æ—Ç–∞. \n–ù–∞–¥–æ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å. \n–í—ã–∑–æ–≤–∏ –∫–æ–º–∞–Ω–¥—É /subcribe ')
    elif db.is_user_subcribes_bot_but_not_subcribes_email(message.from_user.id):
        await message.answer('–¢—ã –∏ —Ç–∞–∫ –æ—Ç–ø–∏—Å–∞–Ω –æ—Ç email-—Ä–∞—Å—Å—ã–ª–∫–∏. –ù–æ —è —Å—á–∏—Ç–∞—é, —á—Ç–æ —ç—Ç—É —Å–∏—Ç—É–∞—Ü–∏—é –Ω–∞–¥–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å. \n–í—ã–∑–æ–≤–∏ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É /get_email')
    else:
        db.update_subscription(message.from_user.id, True, True)
        await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!!!' + 'ü•≥üòéü§ì\n' + '–¢—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è! –¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –æ—Å–≤–µ–¥–æ–º–ª–µ–Ω –æ –Ω–∞—à–∏—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö –ø–æ—Ç–æ–º—É —á—Ç–æ –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å email-—ã')

@dp.message_handler(Command('go_web'))
async def go_web(message: types.Message):
    pass

@dp.message_handler(Command('join_channel'))
async def join_channel(message: types.Message):
    pass


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)